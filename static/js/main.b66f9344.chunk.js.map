{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","start","end","value","duration","separator","variant","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","red","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fdata","setState","this","Styles","image","src","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b66f9344.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2XHLl\",\"card\":\"Cards_card__3bR_2\",\"confirmed\":\"Cards_confirmed__2ru5m\",\"recovered\":\"Cards_recovered__dSIeU\",\"deaths\":\"Cards_deaths__2watK\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards=( {data: { confirmed,recovered,deaths,lastUpdate }}) => {\r\n    if(!confirmed)\r\n    {\r\n        return '...Loading';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.confirmed)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom><CountUp start={0} end={confirmed.value} duration={2.5} separator={','}/></Typography>\r\n                        <Typography variant='h5'>Real Data</Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom><CountUp start={0} end={recovered.value} duration={2.5} separator={','}/></Typography>\r\n                        <Typography variant='h5'>Real Data</Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recovered cases from covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom><CountUp start={0} end={deaths.value} duration={2.5} separator={','}/></Typography>\r\n                        <Typography variant='h5'>Real Data</Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused by covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData=async(country)=>{\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeableUrl);\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport const fetchDailyData=async()=>{\r\n    try{\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        const modifiedData= data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n        return (countries.map(({name})=>name));\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\nimport styles from './Chart.module.css';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst Chart=({data:{confirmed,recovered,deaths},country})=>{\r\n    const [dailyData,setDailyData]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart=(\r\n        dailyData.length?(<Line \r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:\"#333fff\",\r\n                fill:true,\r\n            },{\r\n               data:dailyData.map(({deaths})=>deaths),\r\n               label:'Deaths',\r\n               borderColor:red,\r\n               backgroundColor:'rgba(255,0,0,0.5)',\r\n               fill:true,\r\n            }]\r\n        }}\r\n        />):null\r\n    )\r\n    const barChart=(\r\n        (confirmed)?(<Bar\r\n            data={\r\n                {\r\n                    labels:['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['rgba(0, 0,255, 0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                            ],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }],\r\n                }}\r\n            options={\r\n                {\r\n                    legend:{display:false},\r\n                    title:{display:true,text:`Current state in ${country}`},\r\n                }\r\n            }\r\n            />):null\r\n    )\r\n    return(\r\n        <div className={styles.container}>\r\n        {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport {fetchCountries} from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI()\r\n    },[setFetchedCountries]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option value=''>Global</option>\r\n            {fetchedCountries.map((country,i)=><option value={country} key={i}>{country}</option>)}\r\n        </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react'\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport Styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport image from './images/image.png';\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fdata=await fetchData();\r\n        this.setState({data:fdata});\r\n    }\r\n    handleCountryChange=async (country)=>{\r\n        const fdata= await fetchData(country);\r\n        this.setState({data:fdata,country:country});\r\n    }\r\n    render(){\r\n        const {data,country}= this.state;\r\n        return(\r\n            <div className={Styles.container}>\r\n            <img className={Styles.image} src={image} alt='Covid-19'/>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__li4NB\",\"image\":\"App_image__1uFwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1khtg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3XnRa\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}